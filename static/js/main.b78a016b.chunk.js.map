{"version":3,"sources":["App.js","index.js"],"names":["audioCtx","window","AudioContext","webkitAudioContext","App","props","_this","Object","C_Files_Misc_WINFO_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_Files_Misc_WINFO_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Files_Misc_WINFO_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","setData","e","preventDefault","value","target","name","Number","setState","C_Files_Misc_WINFO_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","playToneAt","percentage","_assertThisInitialize","C_Files_Misc_WINFO_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","freqMax","freqMin","duration","roundedPercentage","toFixed","freqPerc","state","data","calcFreq","playNote","IsMinMaxEqValid","_this$state","min","max","equation","submitCustomData","_this$state2","x","y","xValues","split","yValues","length","Error","minX","maxX","minY","maxY","finalVals","forEach","d","i","xval","yval","changeDataIntoPercentages","_assertThisInitialize2","dataIn","returnObj","keys","newY","submitEquation","_this$state3","finalvals","f","eval","undefined","roundedi","frequency","callback","oscillator","createOscillator","type","connect","destination","onended","start","stop","currentTime","_this2","dataForChart","dataForChartArr","map","labels","datasets","label","fill","backgroundColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","tooltips","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","react_chartjs_2__WEBPACK_IMPORTED_MODULE_9__","style","width","margin","padding","height","marginBottom","onMouseMove","pageX","offsetLeft","offsetWidth","textAlign","placeholder","onChange","onClick","marginTop","Component","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b78a016b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Scatter } from 'react-chartjs-2';\r\n\r\nconst audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //   data: [{ x: 65, y: 75 }, { x: 59, y: 49 }, { x: 80, y: 90 }, { x: 81, y: 29 }, { x: 56, y: 36 }, { x: 55, y: 25 }, { x: 40, y: 18 }],\r\n            //   dataSet: \"\"\r\n            data: {},\r\n            min: null,\r\n            max: null,\r\n            equation: null\r\n        };\r\n\r\n        this.duration = 25\r\n        this.freqMin = 500\r\n        this.freqMax = 1000\r\n    }\r\n\r\n    setData = (e) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        if (name == \"min\" || name == \"max\") {\r\n            value = Number(value);\r\n        }\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    playToneAt = (percentage) => {\r\n        const { freqMax, freqMin, duration } = this;\r\n        const roundedPercentage = percentage.toFixed(2)\r\n        let freqPerc = this.state.data[roundedPercentage]\r\n        if (freqPerc) {\r\n            let calcFreq = (freqMax - freqMin) * freqPerc + freqMin\r\n            this.playNote(calcFreq, duration, () => { })\r\n        }\r\n    }\r\n\r\n    IsMinMaxEqValid = () => {\r\n        const { min, max, equation } = this.state;\r\n        if (min == null || max == null || equation == null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    submitCustomData = () => {\r\n        let { x, y } = this.state;\r\n        let xValues = x.split(',');\r\n        let yValues = y.split(',');\r\n\r\n        if (xValues.length !== yValues.length) {\r\n            throw new Error('invalid sizes');\r\n        }\r\n\r\n        let finalVals = {}\r\n        let minX, maxX, minY, maxY;\r\n        xValues.forEach((d, i) => {\r\n            let xval = Number(d)\r\n            let yval = Number(yValues[i])\r\n            finalVals[xval] = yval;\r\n\r\n            if (!minX || xval < minX) {\r\n                minX = xval;\r\n            }\r\n\r\n            if (!maxX || xval > maxX) {\r\n                maxX = xval;\r\n            }\r\n\r\n            if (!minY || yval < minY) {\r\n                minY = yval;\r\n            }\r\n\r\n            if (!maxY || yval > maxY) {\r\n                maxY = yval;\r\n            }\r\n        });\r\n        this.setState({ data: this.changeDataIntoPercentages(finalVals, minX, maxX, minY, maxY) })\r\n    }\r\n\r\n    playNote(frequency, duration, callback) {\r\n        duration = duration / 1000; // seconds\r\n\r\n        // create Oscillator node\r\n        var oscillator = audioCtx.createOscillator();\r\n\r\n        oscillator.type = 'square';\r\n        oscillator.frequency.value = frequency; // value in hertz\r\n        oscillator.connect(audioCtx.destination);\r\n\r\n        oscillator.onended = callback;\r\n        oscillator.start(0);\r\n        oscillator.stop(audioCtx.currentTime + duration);\r\n    }\r\n\r\n    playToneAt = (percentage) => {\r\n        const { data } = this.state;\r\n        const { freqMin, freqMax, duration } = this;\r\n        const roundedPercentage = percentage.toFixed(2)\r\n        let freqPerc = data[roundedPercentage]\r\n        if (freqPerc) {\r\n            let calcFreq = (freqMax - freqMin) * freqPerc + freqMin\r\n            this.playNote(calcFreq, duration, () => { })\r\n        }\r\n    }\r\n\r\n    changeDataIntoPercentages = (dataIn, minX, maxX, minY, maxY) => {\r\n        let returnObj = {};\r\n        Object.keys(dataIn).forEach(d => {\r\n            let y = dataIn[d];\r\n            let newY = (y - minY) / (maxY - minY);\r\n            let newX = (d - minX) / (maxX - minX);\r\n\r\n            returnObj[newX.toFixed(2)] = newY.toFixed(2);\r\n        });\r\n        return returnObj;\r\n    }\r\n\r\n    submitEquation = () => {\r\n        const { min, max, equation } = this.state;\r\n        if (this.IsMinMaxEqValid()) {\r\n            let finalvals = {};\r\n            let f = eval(\"(x) => {return \" + equation + \"}\");\r\n            let minY = undefined;\r\n            let maxY = undefined;\r\n\r\n            for (let i = min; i < max; i += (max - min) / 20000) {\r\n                let y = f(i).toFixed(2);\r\n                let roundedi = i.toFixed(2)\r\n                finalvals[roundedi] = y;\r\n\r\n                if (minY == undefined || y < minY) {\r\n                    minY = y;\r\n                }\r\n\r\n                if (maxY == undefined || y > maxY) {\r\n                    maxY = y;\r\n                }\r\n            }\r\n            this.setState({ data: this.changeDataIntoPercentages(finalvals, min, max, minY, maxY) })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let dataForChart = this.state.data;\r\n\r\n        let dataForChartArr = Object.keys(dataForChart).map(d => {\r\n            return {\r\n                x: d,\r\n                y: dataForChart[d]\r\n            }\r\n        });\r\n\r\n        let data = {\r\n            labels: ['Scatter'],\r\n            datasets: [\r\n                {\r\n                    label: 'dataset',\r\n                    fill: true,\r\n                    backgroundColor: 'rgba(75,192,192,0.4)',\r\n                    pointBorderColor: 'rgba(75,192,192,1)',\r\n                    pointBackgroundColor: 'rgba(75,192,192,1)',\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                    pointHoverBorderWidth: 2,\r\n\r\n                    pointRadius: 5,\r\n                    pointHitRadius: 10,\r\n                    data: dataForChartArr.length == 0 ? [] : dataForChartArr\r\n                }\r\n            ],\r\n            options: {\r\n                tooltips: {\r\n\r\n                }\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className=\"container mb-5\">\r\n                <h1 className=\"mt-3 text-center\">DataAud</h1>\r\n                <h3 className=\"text-center\">By Elisa Truong, Zhuo Shan, Anni Yan, William Kwok</h3>\r\n\r\n                {/* <FormGroup controlId=\"formControlsSelect\">\r\n                    <ControlLabel>Select an option below</ControlLabel>\r\n                    <FormControl componentClass=\"select\" placeholder=\"select\">\r\n                        <option value=\"select\" selected disabled>Select</option>\r\n                        <option value=\"other\">Data Table 1</option>\r\n                        <option value=\"other\">Data Graph 1</option>\r\n                    </FormControl>\r\n                </FormGroup> */}\r\n                <Scatter className=\"m-3\" data={data} />\r\n\r\n                <div style={{\r\n                    backgroundColor: \"rgba(75,192,192,1)\",\r\n                    width: '100%',\r\n                    margin: 'auto',\r\n                    // margin: 10,\r\n                    padding: 0,\r\n                    height: 50,\r\n                    marginBottom: 10\r\n                }} onMouseMove={(e) => {\r\n                    let percentage = (e.pageX - e.target.offsetLeft) / (e.target.offsetWidth)\r\n                    this.playToneAt(percentage);\r\n                }}></div>\r\n\r\n                <div style={{ margin: 'auto', textAlign: 'center', width: '50%' }}>\r\n                    {[{\r\n                        name: \"equation\",\r\n                        placeholder: \"Enter an equation (eg \\\"Math.sin(x) + 1\\\" or \\\"Math.pow(x, 2) + 1\\\"\"\r\n                    },\r\n                    {\r\n                        name: \"min\",\r\n                        placeholder: \"Enter a min val\"\r\n                    },\r\n                    { name: \"max\", placeholder: \"Enter a max value\" }\r\n                    ].map(d => {\r\n                        return <input name={d.name} className=\"form-control\" style={{ marginBottom: 10 }} placeholder={d.placeholder} onChange={(e) => {\r\n                            this.setData(e);\r\n                        }} />\r\n                    })}\r\n\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.submitEquation();\r\n                        }}>Submit equation</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ margin: 'auto', textAlign: 'center', width: '50%', marginTop: 10 }}>\r\n                    {[{\r\n                        name: \"x\",\r\n                        placeholder: \"x values\"\r\n                    },\r\n                    {\r\n                        name: \"y\",\r\n                        placeholder: \"y values\"\r\n                    }\r\n                    ].map(d => {\r\n                        return <input name={d.name} className=\"form-control\" style={{ marginBottom: 10 }} placeholder={d.placeholder} onChange={(e) => {\r\n                            this.setData(e);\r\n                        }} />\r\n                    })}\r\n\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.submitCustomData();\r\n                        }}>Submit custom data</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <h2>How to enter data and use app</h2>\r\n                    <ol>\r\n                        <li>First, choose a method to enter data</li>\r\n                        <li>Turn sound on, and hover over the large horizontal bar under the x axis. This is the data represented as sound!</li>\r\n                    </ol>\r\n                    <h2>How to use equation</h2>\r\n                    <ol>\r\n                        <li>Enter an equation in JavaScript format</li>\r\n                        <li>Enter the start of your x range</li>\r\n                        <li>Enter the end of your x range</li>\r\n                    </ol>\r\n                    <h2>How to use custom data</h2>\r\n                    <ol>\r\n                        <li>Enter your x and y values comma separated with no spaces</li>\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}